---
- name: Bootstrap local development environment
  hosts: localhost
  vars:
    uvx: "{{ ansible_env.HOME }}/.local/bin/uvx"
    ansible_playbook: "{{ ansible_env.HOME }}/.local/bin/uvx --from ansible-core ansible-galaxy"
    ansible_galaxy: "{{ ansible_env.HOME }}/.local/bin/uvx --from ansible-core ansible-galaxy"

  tasks:
    - name: Update cache and upgrade packages using generic package manager
      become: true
      ansible.builtin.package:
        upgrade: true
        update_cache: true
      tags: privileged
      when: not ansible_os_family == 'Darwin'

    - name: Install packages
      become: true
      ansible.builtin.package:
        name: "{{ packages }}"
      vars:
        packages:
          - ssh
          - git
          - curl
          - wget
          - bash-completion
          - binutils
          - dnsutils
          - htop
          - tmux
          - unzip
      tags: privileged
      when: not ansible_os_family == 'Darwin'

    - name: Check if the community.general collection is already installed
      ansible.builtin.command:
        cmd: "{{ ansible_galaxy }} collection list | grep community.general"
      register: collection_check
      failed_when: false # Prevents the play from failing if the collection isn't found
      changed_when: false # This is a check, not a change

    - name: Ensure the community.general collection is installed
      ansible.builtin.command: "{{ ansible_galaxy }} collection install community.general"
        #   args:
        #     # Prevents Ansible from re-running this task if the collection is already installed.
        #     # This is a basic form of idempotency.
        #     creates: "{{ ansible_env.HOME }}/.ansible/collections/ansible_collections/community/general"
      changed_when: false # This is a check, not a change
      when: collection_check.stdout == ''

    ## Ensure .local/bin Directory Exists
    - name: Ensure ~/.local/bin directory
      ansible.builtin.file:
        path: "{{ ansible_env.HOME }}/.local/bin"
        state: directory
        mode: "0755"

    ## Ensure .local/opt Directory Exists
    - name: Ensure ~/.local/opt directory
      ansible.builtin.file:
        path: "{{ ansible_env.HOME }}/.local/opt"
        state: directory
        mode: "0755"

    - name: Clone Fargly's Bootstrap Repository
      ansible.builtin.git:
        repo: https://github.com/fargly/bootstrap.git
        dest: "{{ ansible_env.HOME }}/.local/opt/bootstrap"
        accept_hostkey: true
        update: true
      # noqa: latest

    - name: Clone Basecamp Omakub Repository
      ansible.builtin.git:
        repo: https://github.com/basecamp/omakub.git
        dest: "{{ ansible_env.HOME }}/.local/share/omakub"
        accept_hostkey: true
        update: true
      # noqa: latest

    ## Create Local uvx based Ansible Tooling
    - name: Create ansible-playbook script
      ansible.builtin.copy:
        dest: "{{ ansible_env.HOME }}/.local/bin/ansible-playbook"
        content: |
          #!/usr/bin/env bash
          uvx --from ansible-core  --with python-debian ansible-playbook $@

          ## EOF
        mode: "0755"

    - name: Create ansible-playbook-noprivilege script
      ansible.builtin.copy:
        dest: "{{ ansible_env.HOME }}/.local/bin/ansible-playbook-noprivilege"
        content: |
          #!/usr/bin/env bash
          uvx --from ansible-core  --with python-debian ansible-playbook  --skip-tags "privileged" $@

          ## EOF
        mode: "0755"

    - name: Create ansible-playbook-privilege script
      ansible.builtin.copy:
        dest: "{{ ansible_env.HOME }}/.local/bin/ansible-playbook-privilege"
        content: |
          #!/usr/bin/env bash
          uvx --from ansible-core  --with python-debian ansible-playbook --ask-become-pass $@

          ## EOF
        mode: "0755"

    - name: Create ansible-vault script
      ansible.builtin.copy:
        dest: "{{ ansible_env.HOME }}/.local/bin/ansible-vault"
        content: |
          #!/usr/bin/env bash
          ## Note: You may need to add '--ask-vault-pass' in bootstrapping mode
          uvx --from ansible-core  --with python-debian ansible-vault $@

          ## EOF
        mode: "0755"

    - name: Create ansible-galaxy script
      ansible.builtin.copy:
        dest: "{{ ansible_env.HOME }}/.local/bin/ansible-galaxy"
        content: |
          #!/usr/bin/env bash
          uvx --from ansible-core  --with python-debian ansible-galaxy $@

          ## EOF
        mode: "0755"

    - name: Remove the env file line
      ansible.builtin.lineinfile:
        path: "{{ ansible_env.HOME }}/.bashrc"
        create: true
        mode: "0755"
        regexp: '^.*/.local/bin/env.*$'
        state: absent

    - name: Add basic bashrc items
      ansible.builtin.lineinfile:
        path: "{{ ansible_env.HOME }}/.bashrc"
        create: true
        mode: "0755"
        insertafter: EOF
        state: present
        line: |
          set -o vi
          export EDITOR=vim
          export PATH="$HOME/.local/bin:$PATH"
