---
- name: Bootstrap local development environment
  hosts: 127.0.0.1
  connection: local
  tasks:
    - name: Update cache and upgrade packages using generic package manager
      become: true
      ansible.builtin.package:
        upgrade: true
        update_cache: true
      tags: privileged
      when: not ansible_os_family == 'Darwin'

    - name: Install packages
      become: true
      ansible.builtin.package:
        name: "{{ packages }}"
      vars:
        packages:
          - bash-completion
          - binutils
          - dnsutils
          - htop
          - tmux
          - unzip
      tags: privileged
      when: not ansible_os_family == 'Darwin'

    - name: Ensure the community.general collection is installed
      ansible.builtin.command: uvx --from ansible-core ansible-galaxy collection install community.general
      args:
        # Prevents Ansible from re-running this task if the collection is already installed.
        # This is a basic form of idempotency.
        creates: ~/.ansible/collections/ansible_collections/community/general

    # - name: Check if Homebrew is already installed
    #   ansible.builtin.stat:
    #     path: /opt/homebrew/bin/brew
    #   register: brew_executable
    #   when: ansible_os_family == 'Darwin'

    # - name: Download and install Homebrew
    #   ansible.builtin.shell: |
    #     /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
    #   args:
    #     creates: /opt/homebrew/bin/brew
    #   register: homebrew_install_result
    #   changed_when: homebrew_install_result.rc != 0 or "already installed" not in homebrew_install_result.stdout
    #   when: ansible_os_family == 'Darwin' and not brew_executable.stat.exists

    - name: Ensure Homebrew is installed
      ansible.builtin.shell: /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
      args:
        creates: /opt/homebrew/bin/brew
      become: false
      when: ansible_os_family == 'Darwin'
      tags:
        - setup

    - name: Install specified Homebrew packages
      community.general.homebrew:
        name:
          - bash-completion
          - binutils
          - htop
          - tmux
          - unzip
          - git
          - gnu-tar
        state: present
        update_homebrew: true
      become: false
      tags:
        - packages

    ## Ensure .local/bin Directory Exists
    - name: Ensure ~/.local/bin directory
      ansible.builtin.file:
        path: "{{ ansible_env.HOME }}/.local/bin"
        state: directory
        mode: "0755"

    ## Ensure .local/opt Directory Exists
    - name: Ensure ~/.local/opt directory
      ansible.builtin.file:
        path: "{{ ansible_env.HOME }}/.local/opt"
        state: directory
        mode: "0755"

    - name: Clone Fargly's Bootstrap Repository
      ansible.builtin.git:
        repo: https://github.com/fargly/bootstrap.git
        dest: "{{ ansible_env.HOME }}/.local/opt/bootstrap"
      # noqa: latest

    ## Create Local uvx based Ansible Tooling
    - name: Create ansible-playbook script
      ansible.builtin.copy:
        dest: "{{ ansible_env.HOME }}/.local/bin/ansible-playbook"
        content: |
          #!/usr/bin/env bash
          ## uvx based Ansible Playbook Launcher v0.1 20250724

          #uvx --from ansible-core ansible-playbook --ask-become-pass
          uvx --from ansible-core ansible-playbook  --skip-tags "privileged" $@

          ## EOF
        mode: "0755"

    - name: Create ansible-playbook-privilege script
      ansible.builtin.copy:
        dest: "{{ ansible_env.HOME }}/.local/bin/ansible-playbook-privilege"
        content: |
          #!/usr/bin/env bash
          ## uvx based Ansible Playbook Launcher v0.1 20250724

          #uvx --from ansible-core ansible-playbook
          uvx --from ansible-core ansible-playbook --ask-become-pass $@

          ## EOF
        mode: "0755"

    - name: Create ansible-vault script
      ansible.builtin.copy:
        dest: "{{ ansible_env.HOME }}/.local/bin/ansible-vault"
        content: |
          #!/usr/bin/env bash
          ## uvx based Ansible Vault Launcher v0.1 20250724

          #uvx --from ansible-core ansible-playbook --ask-become-pass
          #uvx --from ansible-core ansible-playbook  --skip-tags "privileged" $@
          ## Note: You may need to add '--ask-vault-pass' in bootstrapping mode
          uvx --from ansible-core ansible-vault $@

          ## EOF
        mode: "0755"

    - name: Create ansible-galaxy script
      ansible.builtin.copy:
        dest: "{{ ansible_env.HOME }}/.local/bin/ansible-galaxy"
        content: |
          #!/usr/bin/env bash
          ## uvx based Ansible Galaxy Launcher v0.1 20250724

          # uvx --from ansible-core ansible-galaxy  --skip-tags "privileged" $@
          uvx --from ansible-core ansible-galaxy $@

          ## EOF
        mode: "0755"

    - name: Remove the env file line
      ansible.builtin.lineinfile:
        path: "{{ ansible_env.HOME }}/.bashrc"
        regexp: '^.*/.local/bin/env.*$'
        state: absent

    - name: Add basic bashrc items
      ansible.builtin.lineinfile:
        path: "{{ ansible_env.HOME }}/.bashrc"
        line: |

          set -o vi
          export EDITOR=vim

        state: present
