---
- name: Ensure user and group with ID 1000 are named 'fargly' on Crostini Containers
  hosts: localhost
  become: true
  gather_facts: true

  vars:
    desired_user_name: 'fargly'
    id_to_check: 1000
    crostini: false

  tasks:
    - name: Set Crostini Variable
      ansible.builtin.set_fact:
        crostini: true
      when: ansible_facts['product_name'] == "crosvm"

    - name: End the play on hosts that are not Linux
      ansible.builtin.meta: end_play
      when: not ansible_facts['system'] == "Linux"

    - name: End the play on hosts that are not Crostini
      ansible.builtin.meta: end_play
      when: not crostini

    - name: Get user information for UID {{ id_to_check }}
      ansible.builtin.command: "getent passwd {{ id_to_check }}"
      register: getent_user
      failed_when: getent_user.rc not in [0, 2]
      changed_when: false

    - name: Extract the current username
      ansible.builtin.set_fact:
        current_user_name: "{{ getent_user.stdout_lines[0].split(':')[0] }}"
      when: getent_user.rc == 0

    - name: End the play on desired user name end state
      ansible.builtin.meta: end_play
      when: current_user_name == desired_user_name

    - name: Create rc.local file
      ansible.builtin.copy:
        dest: "/etc/rc.local"
        content: |
          #!/bin/sh -e
          #
          # rc.local
          #
          ############################################
          ## sudo cp crostini-rc.local /etc/rc.local
          ## sudo chmod +x /etc/rc.local
          ## sudo systemctl start rc-local
          ## Stop Container in Developer Settings/Manage Extra Containers
          ## Start Container
          ############################################

          echo "Running rc.local $(date)" >> /tmp/rc-local.log

          oldname="$(getent passwd 1000 | awk -F: '{print $1}')"
          newname="fargly"

          if [ "$oldname" != "$newname" ];then
            sudo pkill -9 -u $oldname
            sudo groupmod -n $newname $oldname
            sudo usermod -d /home/$newname -l $newname -m -c $newname $oldname
          fi

          exit 0
        mode: "0755"

    - name: Invoke rc.local to change user name
      ansible.builtin.systemd:
        name: rc-local
        state: started
      # changed_when: true

    # - name: Invoke rc.local to change user name
    #   ansible.builtin.command: "systemctl start rc-local"
    #   register: rc_local_start
    #   changed_when: true
