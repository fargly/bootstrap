---
- name: Setup Starship Prompt
  hosts: localhost
  gather_facts: true

  vars:
    starship_config_path: "{{ ansible_env.HOME }}/.config/starship.toml"
    starship_install_script_url: "https://starship.rs/install.sh"
    starship_install_script_tempfile: "/tmp/starship_install.sh"
    starship_binary_path: "{{ ansible_env.HOME }}/.local/bin"
    starship_binary: "{{ ansible_env.HOME }}/.local/bin/starship"

  tasks:

    - name: Check if the starship binary exists and is executable
      ansible.builtin.stat:
        path: "{{ starship_binary_path }}/starship"
      register: binary_stat

    - name: Download the script if it doesn't exist or isn't executable
      when: not binary_stat.stat.exists or not binary_stat.stat.executable
      ansible.builtin.get_url:
        url: "{{ starship_install_script_url }}"
        dest: "{{ starship_install_script_tempfile }}"
        mode: '0755'

    - name: Execute the script
      when: not binary_stat.stat.exists or not binary_stat.stat.executable
      ansible.builtin.command: "{{ starship_install_script_tempfile }} --bin-dir {{ starship_binary_path }} --yes"
      changed_when: true

    - name: Remove temporary script if present
      ansible.builtin.file:
        path: "{{ starship_install_script_tempfile }}"
        state: absent

    - name: Check if the starship config exists
      ansible.builtin.stat:
        path: "{{ starship_config_path }}"
      register: config_stat

    - name: Generate Starship Config
      when: not config_stat.stat.exists
      ansible.builtin.command: "{{ starship_binary }} preset tokyo-night --output {{ starship_config_path }}"
      changed_when: true

    - name: Config Starship Prompt
      when: config_stat.stat.exists
      ansible.builtin.command: "{{ starship_binary }} preset tokyo-night --output {{ starship_config_path }}"
      changed_when: true

    - name: Ensure line is present after specified string
      vars:
        config_block: |
          [username]
          show_always = true
          style_user = "bg:#a3aed2 fg:#090c0c"
          style_root = "bg:#a3aed2 fg:#090c0c"
          format = '[$user]($style)'

          [hostname]
          ssh_only = false
          format = '[$hostname](bg:#a3aed2 fg:#090c0c)'

      ansible.builtin.blockinfile:
        path: "{{ starship_config_path }}"
        insertafter: EOF
        block: "{{ config_block }}"

    - name: Modify starship config
      ansible.builtin.replace:
        path: "{{ starship_config_path }}"
        regexp: 'îœ‘'
        replace: '$username@$hostname'
        backup: false
      changed_when: true

    - name: Make starship config active plus Standard
      vars:
        config_block: |
          ##################################################
          ##### User Defined Configurations ################
          set -o vi
          export EDITOR=nvim
          alias ltr="eza -l --sort oldest -r"
          eval "$({{ ansible_env.HOME }}/.local/bin/uv generate-shell-completion bash)"
          eval "$({{ ansible_env.HOME }}/.local/bin/uvx --generate-shell-completion bash)"
          eval "$(/usr/bin/tailscale completion bash)"

          ##################################################
          ##### Starship Prompt Initialization #############
          eval "$({{ ansible_env.HOME }}/.local/bin/starship init bash)"
          eval "$({{ ansible_env.HOME }}/.local/bin/starship completions bash)"

          ##################################################
          ##### Tmux Bash Completion Source ################
          source {{ ansible_env.HOME }}/.local/share/scop-bash-completion/bash_completion
          source {{ ansible_env.HOME }}/.local/share/scop-bash-completion/completions/tmux

      ansible.builtin.blockinfile:
        path: "{{ ansible_env.HOME }}/.bashrc"
        insertafter: EOF
        block: "{{ config_block }}"

