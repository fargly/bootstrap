---

# - name: Import crostini_username Playbook
#   ansible.builtin.import_playbook: crostini_username.yaml

- name: Ensure webi file exists and is executable in user space
  hosts: localhost
  vars:
    # Use ansible_env.HOME for the current user's home directory
    script_dir: "{{ ansible_env.HOME }}/.local/bin"
    script_path: "{{ script_dir }}/webi"
    temp_script_path: "/tmp/webi_tmp.sh"
    script_uri: "https://webi.sh"

  tasks:

    - name: Remove the webi maintained Path Variables
      ansible.builtin.lineinfile:
        path: "{{ ansible_env.HOME }}/.bashrc"
        create: true
        mode: "0755"
        regexp: '^.*PATH="$HOME/.local/bin:$PATH".*$'
        state: absent

    # - name: Remove the env file line
    #   ansible.builtin.lineinfile:
    #     path: "{{ ansible_env.HOME }}/.bashrc"
    #     create: true
    #     mode: "0755"
    #     line: |
    #       PATH="$HOME/.local/bin:$PATH"
    #       export PATH
    #     state: absent

    - name: Create the user's bin directory if it doesn't exist
      ansible.builtin.file:
        path: "{{ script_dir }}"
        state: directory
        mode: '0755'

    - name: Check if the script exists and is executable
      ansible.builtin.stat:
        path: "{{ script_path }}"
      register: script_stat

    - name: Download the script if it doesn't exist or isn't executable
      when: not script_stat.stat.exists or not script_stat.stat.executable
      ansible.builtin.get_url:
        url: "{{ script_uri }}"
        dest: "{{ temp_script_path }}"
        mode: '0755'

    - name: Execute the script
      when: not script_stat.stat.exists or not script_stat.stat.executable
      ansible.builtin.command: "{{ temp_script_path }}"
      register: script_output
      changed_when: true

    - name: Display script output
      when: not script_stat.stat.exists or not script_stat.stat.executable
      ansible.builtin.debug:
        var: script_output.stdout_lines

    - name: Run 'envman' load.sh Script
      ansible.builtin.command: "bash {{ ansible_env.HOME }}/.config/envman/load.sh"
      changed_when: true

    - name: Remove temporary script if present
      ansible.builtin.file:
        path: "{{ temp_script_path }}"
        state: absent
