## Playbook for Managaging Secrets (i.e., ssh keys, API keys, etc.)

- name: Extract SSH Private Key from Vault and Write to File
  hosts: localhost
  connection: local
  gather_facts: true

  vars_files:
    - secrets.yaml.vault # This line tells Ansible to load variables from vault.yml

  vars:
    ssh_user: fargly
    ssh_public_key: "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQC3f5k5Z9v8z6+7b"
    # https://github.com/fargly.keys

  tasks:
    - name: Ensure .ssh directory exists
      ansible.builtin.file:
        path: "~/.ssh"
        state: directory
        mode: '0700'

    - name: Ensure authorized_keys file exists and has correct permissions
      ansible.builtin.file:
        path: "/home/{{ ssh_user }}/.ssh/authorized_keys"
        state: file
        mode: '0600'
        owner: "{{ ssh_user }}"
        group: "{{ ssh_user }}"


    - name: Add or ensure specific SSH public key is present in authorized_keys
      ansible.builtin.lineinfile:
        path: "/home/{{ ssh_user }}/.ssh/authorized_keys"
        line: "{{ ssh_public_key }}"
        create: true
        state: present
        mode: '0600'
        owner: "{{ ssh_user }}"
        group: "{{ ssh_user }}"

    - name: Write SSH private key to file
      ansible.builtin.copy:
        content: "{{ ssh_private_key }}"
        dest: "{{ ansible_env.HOME }}/.ssh/{{ ssh_private_key_name }}" # Change this to your desired filename
        mode: '0600' # Essential for private keys
      no_log: true # Prevent the key from appearing in logs

    - name: Set correct permissions for the key (redundant but good practice)
      ansible.builtin.file:
        path: "{{ ansible_env.HOME }}/.ssh/{{ ssh_private_key_name }}"
        mode: '0600'
      delegate_to: localhost
