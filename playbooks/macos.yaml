---
- name: Bootstrap local development environment
  hosts: 127.0.0.1
  connection: local

  tasks:

    - name: End the play on hosts that are not Linux
      ansible.builtin.meta: end_play
      when: not ansible_os_family == 'Darwin'

    ## macOS/Darwin Specific Tasks
    - name: Ensure Homebrew is installed
      ansible.builtin.shell: /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
      args:
        creates: /opt/homebrew/bin/brew
      become: false
      tags:
        - setup

    - name: Install specified Homebrew packages
      community.general.homebrew:
        name:
          - bash-completion
          - binutils
          - htop
          - tmux
          - unzip
          - git
          - gnu-tar
        state: present
        update_homebrew: true
      become: false
      tags:
        - packages

    - name: Find the username for UID 501
      ansible.builtin.command: dscl . -search /Users UniqueID 501
      register: user_info
      changed_when: false # This is a lookup command, not a change

    - name: Extract username from command output
      ansible.builtin.set_fact:
        target_user: "{{ user_info.stdout | regex_search('^\\S+') }}"

    # - name: Set the user's shell to bash
    #   ansible.builtin.user:
    #     name: "{{ target_user }}"
    #     shell: /bin/bash
    #   when: target_user is defined and target_user | length > 0 and ansible_os_family == 'Darwin'
    #   become: true

    - name: Get current shell for user
      ansible.builtin.command: dscl . -read /Users/{{ target_user }} UserShell
      register: shell_info
      changed_when: false
      when: target_user is defined and target_user | length > 0

    # - name: Parse dscl output
    #   ansible.builtin.set_fact:
    #     shell_info_parsed: >
    #       {{ shell_info.stdout_lines | map('split', ': ', 1) | from_items }}

    - name: Set boolean if current shell is bash
      ansible.builtin.set_fact:
        current_shell_is_bash: "{{ (shell_info.stdout | regex_search('UserShell: (.+)', '\\1')) == '/bin/bash' }}"

    # - name: Extract current shell from dscl output
    #   ansible.builtin.set_fact:
    #     current_shell: "{{ shell_info.stdout | regex_search('UserShell: (.+)', '\\1') }}"

    # - name: Ensure the user's shell is bash
    #   ansible.builtin.debug:
    #     msg: "Current shell for user {{ target_user }} is {{ current_shell }}"

    - name: Set the user's shell to bash
      ansible.builtin.command: "chsh -s /bin/bash {{ target_user }}"
      changed_when: not current_shell_is_bash
      become: true
